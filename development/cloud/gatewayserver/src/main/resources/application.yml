server:
  port: 8073

spring:
  application:
    name: "gatewayserver"
  config:
    import: "optional:configserver:http://localhost:14117/"
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:7080/realms/Vocasia/protocol/openid-connect/certs"
  cloud:
    kubernetes:
      discovery:
        all-namespaces: true
        enabled: true
    discovery:
      client:
        health-indicator:
          enabled: false
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
      httpclient:
        connect-timeout: 1000
        response-timeout: 20s
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

info:
  app:
    name: "gatewayserver"
    description: "Gateway Server"
    version: "1.0.0"

logging:
  level:
    com:
      vocasia:
        gatewayserver: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
    authenticationCircuitBreaker:
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 5000
    instructorCircuitBreaker:
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 5000
