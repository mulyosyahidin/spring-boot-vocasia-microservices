server:
  port: 14120

spring:
  application:
    name: "authentication"
  profiles:
    active: "development"
  config:
    import: "optional:configserver:http://localhost:14117/"
  datasource:
    url: "jdbc:mysql://localhost:30618/authentication_db"
    username: "root"
    password: "password"
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
  security:
    oauth2:
      client:
        registration:
          external:
            provider: external
            client-name: external
            client-id: vocasia-users
            client-secret: 3sQonBKkutMPLtISDo4K92YTVKoNAv9w
            scope:
              - openid
              - profile
              - email
            authorization-grant-type: password
  sql:
    init:
      mode: always
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:14118/eureka/

info:
  app:
    name: "authentication"
    description: "Authentication Service"
    version: "1.0.0"

logging:
  level:
    com:
      vocasia:
        authentication: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      max-attempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.RuntimeException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1
